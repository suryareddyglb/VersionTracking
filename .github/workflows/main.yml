name: Run Version Tracking

on:
  push:
    branches:
      - main

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: mydb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U myuser -d mydb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Debug token length
        run: echo "Token length:${#MYTOKEN}"
        env:
          MYTOKEN: ${{ secrets.MYTOKEN }}

      - name: Create version_tracking table
        run: |
          echo "Creating version_tracking table if it doesn't exist..."
          PGPASSWORD=mypassword psql \
            -h localhost -U myuser -d mydb \
            -c "CREATE TABLE IF NOT EXISTS version_tracking (
                  lob TEXT NOT NULL,
                  appname TEXT NOT NULL,
                  packagename TEXT NOT NULL,
                  version1 TEXT,
                  version2 TEXT,
                  version3 TEXT,
                  PRIMARY KEY (lob, appname, packagename)
                );"

      - name: Run version tracking
        env:
          MYTOKEN: ${{ secrets.MYTOKEN }}
          PG_CONNECTION_STRING: "Host=localhost;Username=myuser;Password=mypassword;Database=mydb"
        run: dotnet run --project ./ConsoleApp1.csproj

      - name: Debug:Show inserted data
        run: |
          echo "Fetching data from version_tracking table..."
          PGPASSWORD=mypassword psql \
            -h localhost -U myuser -d mydb \
            -c "SELECT * FROM version_tracking;"
